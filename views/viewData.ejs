<!-- Ryan Hawkins -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data</title>
    
    <!-- Favicons -->
    <link href="https://aforbush1.github.io/INTEX/views/assets/img/provoIcon.ico" rel="icon">
    <link href="https://aforbush1.github.io/INTEX/views/assets/img/provoIcon.ico" rel="provo-icon">

    <!-- Favicons -->
    <link href="https://aforbush1.github.io/INTEX/views/assets/img/provoIcon.ico" rel="icon">
    <link href="https://aforbush1.github.io/INTEX/views/assets/img/provoIcon.ico" rel="provo-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="https://aforbush1.github.io/INTEX/views/assets/vendor/aos/aos.css" rel="stylesheet">
    <link href="https://aforbush1.github.io/INTEX/views/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://aforbush1.github.io/INTEX/views/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="https://aforbush1.github.io/INTEX/views/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="https://aforbush1.github.io/INTEX/views/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

    <!--main css file-->
    <link href="https://aforbush1.github.io/INTEX/views/assets/css/style.css" rel="stylesheet">

    <style>
        body {
            background-color: #e0e0e0;
            font-family: Arial, sans-serif;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

        .login-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 400px;
            text-align: center;
        }

        .login-form {
            width: 100%;
        }

        fieldset {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
        }

        legend {
            font-size: 1.5em;
            font-weight: bold;
            margin-bottom: 10px;
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .form-group {
            margin-top: 20px;
            display: flex;
            justify-content: center;
        }

        .btn {
            background-color: #6a9c59;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>

</head>

<body style="background-image: url('https://aforbush1.github.io/INTEX/views/assets/img/utahLake.jpg'); background-size: cover;">
<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex align-items-center" style="background: grey;">
    <div class="container d-flex justify-content-between align-items-center">
        <div class="logo">
            <a href="/adminIndex/<%=id%>"><img src="https://aforbush1.github.io/INTEX/views/assets/img/provoLogo.png" alt="" class="img-fluid"></a>
        </div>
        <!-- .navbar -->
        <nav id="navbar" class="navbar">
            <ul>
                <li><a href="/adminIndex/<%=id%>">Home</a></li>
                    <li><a href="/createUser/<%=id%>">Create User</a></li>
                    <li><a href="/viewUser/<%=id%>">View Users</a></li>
                    <li><a class="active " href="/viewData/<%=id%>">View Data</a></li>
                    <li><a href="/">Log Out</a></li>
            </ul>
        </nav>
    </div>
</header>

<br><br><br><br><br>
<div class="login-container">
    <form class='login-form' action="/filterData/<%=id%>" method="POST">
        <fieldset>
            <legend>Filter</legend>
            <label for="filterCity">City</label>
            <select name="filterCity" id="filterCity">
                <option value="Provo">Provo</option>
                <option value="Plainsville">Plainsville</option>
                <option value="Both" selected>Both</option>
            </select>
            <label for="findRecord">Find Record</label>
            <select name="findRecord" id="findRecord">
                <option value="default" selected>All Records</option>
            </select>
            <div class="col-md-6 form-group">
                <input type="submit" class="btn" value="Submit">
            </div>
        </fieldset>
    </form>
</div>

<br><br>
<script>
    function updateRecordOptions() {
        const selectedCity = document.getElementById("filterCity").value;
        console.log("the value has been updated as " + selectedCity)

        // Fetch records for the selected city or both cities using AJAX
        let cities;
        if (selectedCity === "Both") {
            // Fetch records for both cities
            cities = ["Provo", "Plainsville"];
            console.log("both of the cities are selected")
        } else {
            // Fetch records for the selected city
            cities = [selectedCity];
            console.log("only one city has been selected")
        }

        // Array to store all records
        const allRecords = [];

        // Fetch records for each city
        const fetchPromises = cities.map(city => {
            return fetch(`/getRecords/${city}?_=${new Date().getTime()}`)
                .then(response => response.json())
                .then(data => {
                    // Add records to the array
                    allRecords.push(...data);
                })
                .catch(error => console.error(`Error fetching records for ${city}:`, error));
        });

        // After all fetches are complete, update the dropdown
        Promise.all(fetchPromises)
            .then(() => {
                const findRecord = document.getElementById("findRecord");
                findRecord.innerHTML = '<option value="default" selected>All Records</option>';

                // Populate options with fetched data
                allRecords.forEach(record => {
                    const option = document.createElement("option");
                    option.value = record.id;
                    //console.log("the id is"+ option.value)
                    option.textContent = `${record.Date}, ${record.Time}, ${record.Age}, ${record.Gender}`;
                    findRecord.appendChild(option);
                });
            })
            .catch(error => console.error("Error fetching records:", error));
    }

    // Attach the function to the change event of the "filterCity" dropdown
    document.getElementById("filterCity").addEventListener("change", updateRecordOptions);

    // Initial call to populate options on page load
    updateRecordOptions();
</script>

</body>
</html>
